{"version":3,"sources":["components/currencyPair.js","components/spread.js","components/minMax.js","components/offer.js","helpers/helpers.js","components/bid.js","components/ask.js","App.js","index.js"],"names":["useStyles","makeStyles","formControl","minWidth","CurrencyPair","currencies","pair","setPair","classes","FormControl","variant","className","InputLabel","id","Select","labelId","value","onChange","event","target","label","MenuItem","map","currency","Spread","spread","Typography","Math","floor","MinMax","min","max","offer","display","justifyContent","backgroundColor","margin","padding","values","fontWeight","Offer","rate","quantity","numberOfOffers","compare","a","b","ra","generateKey","pre","Date","getTime","Bid","bid","ca","co","Ask","ask","color","header","column","textAlign","flexDirection","App","useState","setCurrencies","stats","setStats","snapshotBuy","setSnapshotBuy","snapshotSell","setSnapshotSell","split","url","useEffect","pairs","fetch","then","res","json","data","Object","keys","items","filter","test","sort","apiCall","ws","WebSocket","onopen","send","JSON","stringify","onmessage","evt","parse","action","message","changes","forEach","change","entryType","prevState","item","some","state","changeList","OPEN","CONNECTING","close","body","buy","sell","Container","maxWidth","Grid","container","spacing","xs","Paper","square","v","h","l","sm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91238e8c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MenuItem, Select, InputLabel, FormControl, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    formControl: {\r\n        minWidth: 120,\r\n    },\r\n});\r\n\r\nexport const CurrencyPair = ({currencies, pair, setPair}) => {\r\n    const classes = useStyles()\r\n\r\n    const handleChange = (event) => {\r\n        setPair(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"currency-pair\">Currency Pair</InputLabel>\r\n            <Select\r\n                labelId=\"currency-pair\"\r\n                id=\"currency-pair\"    \r\n                value={pair}\r\n                onChange={handleChange}\r\n                label=\"currency-pair\"\r\n            >\r\n                <MenuItem value={pair}>{pair}</MenuItem>\r\n                {currencies && currencies.map(currency => <MenuItem key={currency} value={currency}>{currency}</MenuItem> )} \r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}","import React from 'react'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const Spread = ({spread}) => {\r\n    return(\r\n        <div>\r\n            <Typography>Spread: <b>{Math.floor(spread * 100) / 100}</b></Typography>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const MinMax = ({min, max}) => {\r\n    return(\r\n        <div>\r\n            <div>\r\n                <Typography>Min: <b>{min}</b></Typography>\r\n                <Typography>Max: <b>{max}</b></Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n    offer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#D3D3D3',\r\n        margin: '1rem',\r\n        padding: '1rem'\r\n    },\r\n    values: {\r\n        fontWeight: \"bold\"\r\n    }\r\n\r\n})\r\n\r\nexport const Offer = ({rate, quantity, numberOfOffers, currency}) => {\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <div className={classes.offer}>\r\n            <div>\r\n                <Typography>Kurs</Typography>\r\n                <Typography className={classes.values}>{rate}</Typography>\r\n            </div>\r\n            <div>\r\n                <Typography>Ilosc {currency}</Typography>\r\n                <Typography className={classes.values}>{quantity}</Typography>\r\n            </div>\r\n            <div>\r\n                <Typography>Wartosc PLN </Typography>\r\n                <Typography className={classes.values}>{Math.floor(rate * quantity * 100) / 100}</Typography>\r\n            </div>\r\n            <div>\r\n                <Typography>Liczba offert</Typography>\r\n                <Typography className={classes.values}>{numberOfOffers}</Typography>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}","export const changeList = (change, setSnapshotBuy, setSnapshotSell) => {\r\n    //change list depend of push entry type and push action\r\n    if (change.entryType === \"Buy\" && change.action === \"remove\") {\r\n        //delete remove entry\r\n        setSnapshotBuy((prevState) => {\r\n            const newState = prevState.filter(item => item.ra !== change.rate).sort(compare)\r\n            return newState\r\n        })\r\n\r\n    } else if (change.entryType === \"Buy\" && change.action === \"update\") {\r\n        //depends on rate, change entry or add new entry on the list\r\n        setSnapshotBuy((prevState) => {\r\n            if (prevState.some(item => item.ra === change.rate)) {\r\n                return prevState.map((item) => {\r\n                    if (item.ra === change.rate) {\r\n                        return change.state\r\n                    }\r\n                    return item\r\n                }).sort(compare)\r\n            } else {\r\n                return [...prevState, change.state].sort(compare)\r\n            }\r\n\r\n        })\r\n    //the same actions for sell like for buy entry type\r\n    } else if (change.entryType === \"Sell\" && change.action === \"remove\") {\r\n\r\n        setSnapshotSell((prevState) => {\r\n            const newState = prevState.filter(item => item.ra !== change.rate).sort(compare)\r\n            return newState\r\n        })\r\n\r\n    } else if (change.entryType === \"Sell\" && change.action === \"update\") {\r\n\r\n        setSnapshotSell((prevState) => {\r\n            if (prevState.some(item => item.ra === change.rate)) {\r\n                return prevState.map((item) => {\r\n                    if (item.ra === change.rate) {\r\n                        return change.state\r\n                    }\r\n                    return item\r\n                }).sort(compare)\r\n            } else {\r\n                return [...prevState, change.state].sort(compare)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction compare(a, b) {\r\n    if (a.ra < b.ra) {\r\n        return -1;\r\n    }\r\n    if (a.ra > b.ra) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport const generateKey = (pre) => {\r\n    return `${ pre }_${ new Date().getTime() }`;\r\n}","import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Offer } from './offer'\r\nimport { generateKey } from '../helpers/helpers';\r\n\r\n\r\nexport const Bid = ({ bid, currency }) => {\r\n    return (\r\n        <div>\r\n            <Typography variant='h6'>Bid</Typography>\r\n            {bid.map(offer => {\r\n                return <Offer key={generateKey(offer.ra)} rate={offer.ra} quantity={offer.ca} numberOfOffers={offer.co} currency={currency}/>\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Offer } from './offer';\r\nimport { generateKey } from '../helpers/helpers';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport const Ask = ({ask, currency}) => {\r\n    \r\n    return(\r\n        <div>\r\n            <Typography variant=\"h6\" color=\"initial\">Ask</Typography>\r\n            {ask.map(offer => {\r\n                return <Offer key={generateKey(offer.ra)} rate={offer.ra} quantity={offer.ca} numberOfOffers={offer.co} currency={currency}/>\r\n            })}\r\n        </div>\r\n    )\r\n}","import { Container, Grid, Paper } from '@material-ui/core';\nimport { CurrencyPair } from './components/currencyPair';\nimport { makeStyles } from '@material-ui/core';\nimport { Spread } from './components/spread';\nimport { MinMax } from './components/minMax';\nimport { Bid } from './components/bid';\nimport { Ask } from './components/ask';\nimport { useEffect, useState } from 'react';\nimport './index.css';\nimport { changeList } from './helpers/helpers';\n\nconst useStyles = makeStyles({\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '1rem',\n    backgroundColor: '#D3D3D3',\n  },\n  column: {\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n\n  }\n})\n\nfunction App() {\n  const classes = useStyles()\n  \n  const [currencies, setCurrencies] = useState('')\n  const [pair, setPair] = useState('BTC-PLN')\n  const [stats, setStats] = useState({});\n  const [snapshotBuy, setSnapshotBuy] = useState([])\n  const [snapshotSell, setSnapshotSell] = useState([])\n\n  const currency = pair.split('-')[0]\n  const url = 'https://api.bitbay.net/rest/trading/'\n  \n\n  //first render, get currencies pairs\n  useEffect(() => {\n    let pairs = []\n\n\n    const apiCall = async () => {\n      await fetch(url + 'ticker')\n        .then(res => res.json())\n        .then(data => {\n          pairs = Object.keys(data.items)\n            .filter(pair => /PLN/.test(pair))\n            .sort()\n        })\n      setCurrencies(pairs)\n    }\n\n    apiCall()\n  }, [])\n\n  //subscribe orderbook-limited\n  useEffect(() => {\n    let ws = new WebSocket('wss://api.bitbay.net/websocket/')\n\n    ws.onopen = () => ws.send(JSON.stringify({\n      \"action\": \"subscribe-public\",\n      \"module\": \"trading\",\n      \"path\": `orderbook-limited/${pair}/10`\n    }))\n\n\n    ws.onmessage = evt => {\n      let data = JSON.parse(evt.data)\n      if (data.action === 'push') {\n        data.message.changes.forEach(change => {\n          changeList(change, setSnapshotBuy, setSnapshotSell)\n        })\n      }\n    }\n    return (() => {\n      if (ws.OPEN && !ws.CONNECTING) {\n        ws.send(JSON.stringify({\n          \"action\": \"subscribe-public\",\n          \"module\": \"trading\",\n          \"path\": `orderbook-limited/${pair}/10`\n        }))\n        ws.close()\n      }\n    })\n\n  }, [pair])\n\n  //make snapshot \n  useEffect(() => {\n\n    let ws = new WebSocket('wss://api.bitbay.net/websocket/')\n\n    ws.onopen = () => ws.send(JSON.stringify({\n      \"requestId\": \"78539fe0-e9b0-4e4e-8c86-70b36aa93d4f\",\n      \"action\": \"proxy\",\n      \"module\": \"trading\",\n      \"path\": `orderbook-limited/${pair}/10`\n    }))\n\n    ws.onmessage = evt => {\n      let data = JSON.parse(evt.data)\n      setSnapshotBuy(data.body.buy)\n      setSnapshotSell(data.body.sell)\n    }\n    return (() => {\n      if (ws.OPEN && !ws.CONNECTING) {\n        ws.send(JSON.stringify({\n          \"requestId\": \"78539fe0-e9b0-4e4e-8c86-70b36aa93d4f\",\n          \"action\": \"proxy\",\n          \"module\": \"trading\",\n          \"path\": `orderbook-limited/${pair}/10`\n        }))\n        ws.close()\n      }\n    })\n  }, [pair])\n\n  //get stats\n  useEffect(() => {\n    let stats = {}\n    const apiCall = async () => {\n      await fetch(url + `stats/${pair}` )\n        .then(res => res.json())\n        .then(data => {\n          stats = data.stats\n        })\n        setStats(stats)\n    }\n\n    apiCall()\n  }, [pair])\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Paper className={classes.header} variant=\"outlined\" square>\n            <CurrencyPair currencies={currencies} setPair={setPair} pair={pair} />\n            <Spread spread={stats.v}/>\n            <MinMax max={stats.h} min={stats.l} />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.column} variant=\"outlined\" square>\n            <Bid pair={pair} bid={snapshotBuy} currency={currency} />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.column} variant=\"outlined\" square >\n            <Ask pair={pair} ask={snapshotSell} currency={currency} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}