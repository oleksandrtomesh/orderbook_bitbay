{"version":3,"sources":["components/currencyPair.js","components/spread.js","components/minMax.js","components/offer.js","helpers/helpers.js","components/bid.js","components/ask.js","App.js","index.js"],"names":["useStyles","makeStyles","formControl","minWidth","CurrencyPair","currencies","pair","setPair","classes","FormControl","variant","className","InputLabel","id","Select","labelId","value","onChange","event","target","label","MenuItem","map","currency","Spread","useState","spread","setSpread","useEffect","a","fetch","then","res","json","data","sell","buy","sellRate","parseFloat","ra","buyRate","apiCall","Typography","Math","floor","MinMax","url","stats","setStats","l","h","offer","display","justifyContent","backgroundColor","margin","padding","values","fontWeight","Offer","rate","quantity","numberOfOffers","compare","b","generateKey","pre","Date","getTime","Bid","bid","ca","co","Ask","ask","color","header","column","textAlign","flexDirection","App","setCurrencies","snapshotBuy","setSnapshotBuy","snapshotSell","setSnapshotSell","setCurrency","pairs","Object","keys","items","filter","test","sort","ws","WebSocket","onopen","send","JSON","stringify","onmessage","evt","parse","action","message","changes","forEach","change","entryType","prevState","item","some","state","updateList","OPEN","CONNECTING","close","body","split","Container","maxWidth","Grid","container","spacing","xs","Paper","square","sm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a55c3b9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MenuItem, Select, InputLabel, FormControl, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    formControl: {\r\n        minWidth: 120,\r\n    },\r\n});\r\n\r\nexport const CurrencyPair = ({currencies, pair, setPair}) => {\r\n    const classes = useStyles()\r\n\r\n    const handleChange = (event) => {\r\n        setPair(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"currency-pair\">Currency Pair</InputLabel>\r\n            <Select\r\n                labelId=\"currency-pair\"\r\n                id=\"currency-pair\"    \r\n                value={pair}\r\n                onChange={handleChange}\r\n                label=\"currency-pair\"\r\n            >\r\n                <MenuItem value={pair}>{pair}</MenuItem>\r\n                {currencies && currencies.map(currency => <MenuItem key={currency} value={currency}>{currency}</MenuItem> )} \r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const Spread = ({pair}) => {\r\n    const [spread, setSpread] = useState('') \r\n    useEffect(() => {\r\n        let spread = ''\r\n    const apiCall = async () => {\r\n        await fetch(`https://api.bitbay.net/rest/trading/orderbook-limited/${pair}/10` )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.sell[0] && data.buy[0]){\r\n                let sellRate = parseFloat(data.sell[0].ra)\r\n                let buyRate = parseFloat(data.buy[0].ra)\r\n                spread = (( sellRate - buyRate)/((sellRate + buyRate)* 0.5))*100\r\n            }\r\n        })\r\n        setSpread(spread)\r\n    }\r\n\r\n    apiCall()   \r\n    }, [pair])\r\n    return(\r\n        <div>\r\n            <Typography>Spread: <b>{Math.floor(spread * 100) / 100}%</b></Typography>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const MinMax = ({ url, pair }) => {\r\n    const [stats, setStats] = useState({})\r\n\r\n    //get stats\r\n    useEffect(() => {\r\n        let stats = {}\r\n        const apiCall = async () => {\r\n            await fetch(url + `stats/${pair}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    stats = data.stats\r\n                })\r\n            setStats(stats)\r\n        }\r\n        apiCall()\r\n    }, [pair, url])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Typography>Min: <b>{stats.l}</b></Typography>\r\n                <Typography>Max: <b>{stats.h}</b></Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n    offer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#D3D3D3',\r\n        margin: '1rem',\r\n        padding: '1rem'\r\n    },\r\n    values: {\r\n        fontWeight: \"bold\"\r\n    }\r\n\r\n})\r\n\r\nexport const Offer = ({rate, quantity, numberOfOffers, currency}) => {\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <div className={classes.offer}>\r\n            <div>\r\n                <Typography>Kurs</Typography>\r\n                <Typography className={classes.values}>{rate}</Typography>\r\n            </div>\r\n            <div>\r\n                <Typography>Ilosc {currency}</Typography>\r\n                <Typography className={classes.values}>{quantity}</Typography>\r\n            </div>\r\n            <div>\r\n                <Typography>Wartosc PLN </Typography>\r\n                <Typography className={classes.values}>{Math.floor(rate * quantity * 100) / 100}</Typography>\r\n            </div>\r\n            <div>\r\n                <Typography>Liczba offert</Typography>\r\n                <Typography className={classes.values}>{numberOfOffers}</Typography>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}","export const updateList = (change, setSnapshotBuy, setSnapshotSell) => {\r\n    //change list depend of push entry type and push action\r\n    if (change.entryType === \"Buy\" && change.action === \"remove\") {\r\n        //delete remove entry\r\n        setSnapshotBuy((prevState) => {\r\n            const newState = prevState.filter(item => item.ra !== change.rate).sort(compare)\r\n            return newState\r\n        })\r\n\r\n    } else if (change.entryType === \"Buy\" && change.action === \"update\") {\r\n        //depends on rate, change entry or add new entry on the list\r\n        setSnapshotBuy((prevState) => {\r\n            if (prevState.some(item => item.ra === change.rate)) {\r\n                return prevState.map((item) => {\r\n                    if (item.ra === change.rate) {\r\n                        return change.state\r\n                    }\r\n                    return item\r\n                }).sort(compare)\r\n            } else {\r\n                return [...prevState, change.state].sort(compare)\r\n            }\r\n\r\n        })\r\n    //the same actions for sell like for buy entry type\r\n    } else if (change.entryType === \"Sell\" && change.action === \"remove\") {\r\n\r\n        setSnapshotSell((prevState) => {\r\n            const newState = prevState.filter(item => item.ra !== change.rate).sort(compare)\r\n            return newState\r\n        })\r\n\r\n    } else if (change.entryType === \"Sell\" && change.action === \"update\") {\r\n\r\n        setSnapshotSell((prevState) => {\r\n            if (prevState.some(item => item.ra === change.rate)) {\r\n                return prevState.map((item) => {\r\n                    if (item.ra === change.rate) {\r\n                        return change.state\r\n                    }\r\n                    return item\r\n                }).sort(compare)\r\n            } else {\r\n                return [...prevState, change.state].sort(compare)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction compare(a, b) {\r\n    if (a.ra < b.ra) {\r\n        return -1;\r\n    }\r\n    if (a.ra > b.ra) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport const generateKey = (pre) => {\r\n    return `${ pre }_${ new Date().getTime() }`;\r\n}","import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Offer } from './offer'\r\nimport { generateKey } from '../helpers/helpers';\r\n\r\n\r\nexport const Bid = ({ bid, currency }) => {\r\n    return (\r\n        <div>\r\n            <Typography variant='h6'>Bid</Typography>\r\n            {bid.map(offer => {\r\n                return <Offer key={generateKey(offer.ra)} rate={offer.ra} quantity={offer.ca} numberOfOffers={offer.co} currency={currency}/>\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Offer } from './offer';\r\nimport { generateKey } from '../helpers/helpers';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport const Ask = ({ask, currency}) => {\r\n    \r\n    return(\r\n        <div>\r\n            <Typography variant=\"h6\" color=\"initial\">Ask</Typography>\r\n            {ask.map(offer => {\r\n                return <Offer key={generateKey(offer.ra)} rate={offer.ra} quantity={offer.ca} numberOfOffers={offer.co} currency={currency}/>\r\n            })}\r\n        </div>\r\n    )\r\n}","import { Container, Grid, Paper } from '@material-ui/core';\nimport { CurrencyPair } from './components/currencyPair';\nimport { makeStyles } from '@material-ui/core';\nimport { Spread } from './components/spread';\nimport { MinMax } from './components/minMax';\nimport { Bid } from './components/bid';\nimport { Ask } from './components/ask';\nimport { useEffect, useState } from 'react';\nimport './index.css';\nimport { updateList } from './helpers/helpers';\n\nconst useStyles = makeStyles({\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '1rem',\n    backgroundColor: '#D3D3D3',\n  },\n  column: {\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n\n  }\n})\n\nfunction App() {\n  const classes = useStyles()\n\n  const [currencies, setCurrencies] = useState('')\n  const [pair, setPair] = useState('BTC-PLN') \n  const [snapshotBuy, setSnapshotBuy] = useState([])\n  const [snapshotSell, setSnapshotSell] = useState([])\n  const [currency, setCurrency] = useState('')\n  const url = 'https://api.bitbay.net/rest/trading/'\n  \n  //first render, get currencies pairs\n  useEffect(() => {\n    let pairs = []\n    const apiCall = async () => {\n      await fetch(url + 'ticker')\n        .then(res => res.json())\n        .then(data => {\n          pairs = Object.keys(data.items)\n            .filter(pair => /PLN/.test(pair))\n            .sort()\n        })\n      setCurrencies(pairs)\n    }\n\n    apiCall()\n  }, [])\n\n  //subscribe orderbook-limited\n  useEffect(() => {\n    let ws = new WebSocket('wss://api.bitbay.net/websocket/')\n\n    ws.onopen = () => ws.send(JSON.stringify({\n      \"action\": \"subscribe-public\",\n      \"module\": \"trading\",\n      \"path\": `orderbook-limited/${pair}/10`\n    }))\n\n\n    ws.onmessage = evt => {\n      let data = JSON.parse(evt.data)\n      if (data.action === 'push') {\n        data.message.changes.forEach(change => {\n          updateList(change, setSnapshotBuy, setSnapshotSell)\n        })\n      }\n    }\n    \n    return (() => {\n      if (ws.OPEN && !ws.CONNECTING) {\n        ws.send(JSON.stringify({\n          \"action\": \"subscribe-public\",\n          \"module\": \"trading\",\n          \"path\": `orderbook-limited/${pair}/10`\n        }))\n        ws.close()\n      }\n    })\n\n  }, [pair])\n\n  //make snapshot \n  useEffect(() => {\n\n    let ws = new WebSocket('wss://api.bitbay.net/websocket/')\n\n    ws.onopen = () => ws.send(JSON.stringify({\n      \"requestId\": \"78539fe0-e9b0-4e4e-8c86-70b36aa93d4f\",\n      \"action\": \"proxy\",\n      \"module\": \"trading\",\n      \"path\": `orderbook-limited/${pair}/10`\n    }))\n\n    ws.onmessage = evt => {\n      let data = JSON.parse(evt.data)\n      setSnapshotBuy(data.body.buy)\n      setSnapshotSell(data.body.sell)\n    }\n\n    setCurrency(pair.split('-')[0])\n\n    return (() => {\n      if (ws.OPEN && !ws.CONNECTING) {\n        ws.send(JSON.stringify({\n          \"requestId\": \"78539fe0-e9b0-4e4e-8c86-70b36aa93d4f\",\n          \"action\": \"proxy\",\n          \"module\": \"trading\",\n          \"path\": `orderbook-limited/${pair}/10`\n        }))\n        ws.close()\n      }\n    })\n  }, [pair])\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Paper className={classes.header} variant=\"outlined\" square>\n            <CurrencyPair currencies={currencies} setPair={setPair} pair={pair} />\n            <Spread pair={pair}/>\n            <MinMax url={url} pair={pair} />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.column} variant=\"outlined\" square>\n            <Bid pair={pair} bid={snapshotBuy} currency={currency} />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.column} variant=\"outlined\" square >\n            <Ask pair={pair} ask={snapshotSell} currency={currency} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}